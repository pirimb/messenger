{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isMe","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","alt","style","height","FormControl","Input","placeholder","value","onChange","e","target","type","IconButton","disabled","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAyBeA,EApBCC,sBAAW,WAAsBC,GAAS,IAA7BC,EAA4B,EAA5BA,QACnBC,EAD+C,EAAnBC,WACRF,EAAQE,SAElC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAQ,iBAA7C,SACI,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAO,oBAAsB,qBAA9C,SACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,MAAM,QACNC,QAAQ,KACRC,UAAU,KAHd,WAKMR,GAAD,UAAYD,EAAQE,UAAY,eAAhC,KALL,IAKyDF,EAAQA,oB,QCFtEU,EAJKC,IAASC,cATN,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAKYC,Y,iCC8DRC,MA/Df,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACJC,EADI,KACGC,EADH,OAEqBF,mBAAS,IAF9B,mBAEJG,EAFI,KAEMC,EAFN,OAGqBJ,mBAAS,IAH9B,mBAGJnB,EAHI,KAGMwB,EAHN,KA6BX,OAxBAC,qBAAU,WACNjB,EAAGkB,WAAW,YACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXN,EAAYM,EAASC,KAAKC,KAAI,SAACC,GAAD,MAAU,CAACC,GAAID,EAAIC,GAAIC,KAAMF,EAAIE,iBAErE,IAEFT,qBAAU,WACND,EAAYW,OAAO,6BACrB,IAeE,sBAAKlC,UAAU,MAAf,UACI,qBAAKmC,IAAI,yIAAyIC,IAAI,GAAGC,MAAO,CAACC,OAAO,WACxK,oBAAID,MAAO,CAACjC,MAAM,WAAlB,uBACA,qBAAIiC,MAAO,CAACjC,MAAM,WAAlB,sBAAwCL,KAExC,sBAAMC,UAAU,YAAhB,SACI,eAACuC,EAAA,EAAD,CAAavC,UAAU,mBAAvB,UACI,cAACwC,EAAA,EAAD,CAAOxC,UAAU,iBAAiByC,YAAY,qBAAqBC,MAAOvB,EACtEwB,SAAU,SAACC,GAAD,OAAOxB,EAASwB,EAAEC,OAAUH,QAAQI,KAAK,SAEvD,qBAAK9C,UAAU,kBAAf,SACI,cAAC+C,EAAA,EAAD,CAAaC,UAAW7B,EAAOd,QAAQ,YACnCD,MAAM,UACN0C,KAAK,SACLG,QA3BJ,SAACL,GACjBA,EAAEM,iBAEF3C,EAAGkB,WAAW,YAAY0B,IAAI,CAC1BtD,QAASsB,EACTpB,SAAUA,EACVqD,UAAW5C,IAASQ,UAAUqC,WAAWC,oBAE7ClC,EAAS,KAgBO,SAKI,cAAC,IAAD,aAMhB,cAAC,IAAD,UAEQC,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAN,OACT,cAAC,EAAD,CAAkBlC,SAAUA,EAAUF,QAASoC,GAAjCD,YCvDvBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c7c59da.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\r\nimport React, { forwardRef } from 'react'\r\nimport './Message.css'\r\n\r\n\r\nconst Message = forwardRef(({message, username}, ref) => {\r\n    const isMe = username === message.username\r\n\r\n    return (\r\n        <div ref={ref} className={`message ${isMe && \"message__user\"}`}>\r\n            <Card className={isMe ? \"message__userCard\" : \"message__guestCard\"}>\r\n                <CardContent>\r\n                    <Typography \r\n                        color=\"white\" \r\n                        variant=\"h5\" \r\n                        component=\"h2\" \r\n                    >\r\n                        {!isMe && `${message.username || \"Unknown User\"}:`} {message.message}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>            \r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBSHPZ2cosKYPNUVS4-fO16HX10Q3b_x6s\",\r\n    authDomain: \"messenger-a2161.firebaseapp.com\",\r\n    projectId: \"messenger-a2161\",\r\n    storageBucket: \"messenger-a2161.appspot.com\",\r\n    messagingSenderId: \"521408053358\",\r\n    appId: \"1:521408053358:web:d9613c288c70e6ce2da67f\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebaseApp.firestore()\r\n\r\nexport default db","import './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\r\nimport Message from './Message';\r\nimport db from './firebase';\r\nimport firebase from 'firebase'\r\nimport FlipMove from 'react-flip-move';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction App() {\r\n    const [input, setInput] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n    const [username, setUsername] = useState('')\r\n\r\n    useEffect(() => {\r\n        db.collection(\"messages\")\r\n          .orderBy(\"timestamp\", \"desc\")\r\n          .onSnapshot((snapshot) => {\r\n            setMessages(snapshot.docs.map((doc) => ({id: doc.id, data: doc.data()})));\r\n          });\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setUsername(prompt(\"Enter your name please\"))\r\n    },[])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n\r\n        db.collection('messages').add({\r\n            message: input,\r\n            username: username,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setInput('')\r\n\r\n    }\r\n    \r\n    return (\r\n        <div className=\"App\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/Facebook_Messenger_logo_2020.svg/1024px-Facebook_Messenger_logo_2020.svg.png\" alt=\"\" style={{height:\"150px\"}} />\r\n            <h1 style={{color:\"#367df7\"}}>Messenger</h1>\r\n            <h2 style={{color:\"#8a36f7\"}}>Welcome, {username}</h2>\r\n            \r\n            <form className=\"app__form\">\r\n                <FormControl className=\"app__formControl\">\r\n                    <Input className=\"app__formInput\" placeholder=\"Enter your message\" value={input} \r\n                        onChange={(e) => setInput(e.target.   value)} type=\"text\"\r\n                    />\r\n                    <div className=\"app__formButton\">\r\n                        <IconButton  disabled={!input} variant=\"contained\" \r\n                            color=\"primary\"  \r\n                            type=\"submit\" \r\n                            onClick={sendMessage} \r\n                        >\r\n                            <SendIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </FormControl>\r\n            </form>\r\n\r\n            <FlipMove>\r\n                {\r\n                    messages.map(({id, data}) => (\r\n                        <Message key={id} username={username} message={data} />\r\n                    ))\r\n                }\r\n            </FlipMove>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}